#!/bin/sh

brightness () {
	level=$(cat /sys/class/backlight/amdgpu_bl0/brightness)
	#total=$(cat /sys/class/backlight/amdgpu_bl0/max_brightness)
	total=255
	printf 'Screen brightness: %s' "$level/$total"
}

#storage () {
#	space=($(df --block-size=1 / | tail -n 1))
#	total=$(($((${space[2]}))+$((${space[3]}))))
#	printf "$(numfmt ${space[2]} --to=iec)/$(numfmt $total --to=iec) (${space[4]}) of disk space used"
#}

audio () {
	speakers="$(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}')"
	if [ "$(pactl get-sink-mute @DEFAULT_SINK@)" = 'Mute: yes' ]; then
		speakers="$speakers, muted"
	else
		speakers="$speakers, not muted"
	fi
	if [ "$(pactl get-source-mute @DEFAULT_SOURCE@)" = 'Mute: yes' ]; then
		microphone='muted'
	else
		microphone='not muted'
	fi	
	if ! printf '%s' "$speakers" | grep -q '%'; then
		pulseaudio --start
	else
		printf '%s' "Speakers: $speakers. Microphone: $microphone"
	fi
}

battery () {
	charge=$(acpi | grep -v 'Unknown' | sed 's/,//g')
	if [ "$(printf '%s' "$charge" | awk '{print $3}')" = 'Not' ] || [ "$(printf '%s' "$charge" | awk '{print $3}')" = 'Full' ]; then
		printf "Battery: fully charged"
	else
		printf '%s' "Battery: $(printf '%s' "$charge" | awk '{print tolower($3)}') from $(printf '%s' "$charge" | awk '{print $4}') with $(printf '%s' "$charge" | awk '{print $5}') remaining"
	fi
}

clock () {
	printf '%s' "$(date "+%A, %Y-%m-%d, %T")"
}

while true; do
	desktop=$(bspc query -D -d focused --names)
	echo "%{c}$desktop  $(audio). $(brightness). $(battery). $(clock)  $desktop"
	sleep 0.5
done
