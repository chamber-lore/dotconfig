#!/bin/sh

# consider adding an option to set the output file (including env-alikes such as $CURRENT?)
dir=""
name=""
xt=""
path=""
until [ -s "$path" ]; do
	if [ -n "$1" ]; then
		file=$1
	else
		printf 'Enter file path: '
		read -r file
	fi
	dir=$(printf '%s' "$file" | awk -F'/' '{$NF=""; print $0}' | sed "s/ /\//g")
	name=$(printf '%s' "$(printf '%s' "$file" | awk -F'/' '{print $NF}')" | awk -F'.' '{print $1}')
	xt=$(printf '%s' "$(printf '%s' "$file" | awk -F'/' '{print $NF}')" | awk -F'.' '{$1="."; print $0}' | sed 's/ //')
	path=$(printf '%s' "${dir} ${name} ${xt}" | sed 's/ //g')
	outpath=$(printf '%s' "${dir} ${name}_out ${xt}" | sed 's/ //g')
	if ! [ -s "$path" ] ; then
		printf "File not found. Please try again.\n"
		[ -n "$1" ] && exit 0
	fi
done

if [ -n "$2" ]; then
	yourname=$2
else
	printf 'Enter your name: '
	read -r yourname
fi

if [ -n "$3" ]; then
	theirname=$3
else
	printf 'Enter their name: '
	read -r theirname
fi

printf "" > "$outpath"

total=$(wc -l < "$path")
count=0
while IFS='' read -r line || [ -n "$line" ]; do
	if date -d @"$(printf '%s' "$line" | awk '{print $1}')" 2>/dev/null 1>&2 ; then
		# gajim style
		out=$(date -d @"$(printf '%s' "$line" | awk '{print $1}')" 2>/dev/null)
		if [ "$(printf '%s' "$line" | awk '{print $2}')" = '4' ]; then
			out="$out $theirname:"
		else
			out="$out $yourname:"
		fi
		message=$(printf '%s' "${line}" | awk '{ for (i=3; i<=NF; i++) printf("%s ",$i) }END{ print"" }')
	else
		# profanity style
		out=$(date -d "$(printf '%s' "$line" | awk '{print $1}')" 2>/dev/null)
		if [ "$(printf '%s' "$line" | awk '{print $3}')" = 'me:' ] 2>/dev/null; then
			out="$out $yourname:"
		else
			out="$out $theirname:"
		fi
		message=$(printf '%s' "$line" | awk '{ for (i=4; i<=NF; i++) printf("%s ",$i) }END{ print"" }')
	fi
	out="$out $message"
	printf '%s\n' "$out" >> "$outpath"
	count=$((count+1))
	printf '%b' "$count/$total lines completed.\033[0K\r"
done < "$path"
printf 'Converted log file written to %s.\n' "$outpath"
